def test(num):
    print("---test 在函数内部 %d 对应的内存地址 id(num) = %d" % (num, id(num)))  # 与传入地址相同

    # 1> 定义一个字符串变量
    result = "hello"  # "hello" 是单独存储的
    print("---test 函数返回数据的内存地址 id(result) = %d" % id(result))

    # 2> 将字符串变量返回，返回的是数据的引用，而不是数据本身
    return result  # 返回 "hello" 的引用


# 1. 定义一个数字的变量
a = 10  # 10 是单独存储的

# 数据的地址本质上就是一个数字
print("a 变量保存数据的内存地址是 id(a) = %d" % id(a))

# 2. 调用 test 函数，本质上传递的是实参保存数据的引用，而不是实参保存的数据！
# 注意：如果函数有返回值，但是没有定义变量接收
# 程序不会报错，但是无法获得返回结果
r = test(a)  # 传入 10 的引用
# 与传出地址相同

print("%s 的内存地址是 id(r) = %d" % (r, id(r)))
